import { NavigationContainer } from '@react-navigation/native';
import { StatusBar } from 'expo-status-bar';
import StackNavigator from './components/StackNavigator';
import * as Font from 'expo-font';
import { useEffect, useState } from 'react';
import { ClerkProvider, SignedIn, SignedOut } from '@clerk/clerk-expo';
import { tokenCache } from '@clerk/clerk-expo/token-cache';
import { SafeAreaProvider } from 'react-native-safe-area-context';
import * as Notifications from 'expo-notifications'; // üåü Notifications import Ï∂îÍ∞Ä
import { AppState } from 'react-native'; // üåü AppState import Ï∂îÍ∞Ä

export default function App() {
  const publishableKey = process.env.EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY; //ClerkÏúºÎ°ú Î°úÍ∑∏Ïù∏ Í¥ÄÎ¶¨
  if (!publishableKey) {
    throw new Error("CLERK_PUBLISHABLE_KEY Error");
  }

  useEffect(() => {
    // Ïï± ÏÉÅÌÉú Î≥ÄÍ≤ΩÏùÑ Í∞êÏßÄÌïòÎäî Ìï∏Îì§Îü¨
    const handleAppStateChange = (nextAppState) => {
      // Ïï±Ïù¥ 'ÌôúÏÑ±Ìôî' ÏÉÅÌÉú(Foreground)Î°ú ÏßÑÏûÖÌï† Îïå
      if (nextAppState === 'active') {
        dismissAppNotifications();
      }
    };

    // AppState Î¶¨Ïä§ÎÑà Îì±Î°ù
    const subscription = AppState.addEventListener('change', handleAppStateChange);

    // Ïª¥Ìè¨ÎÑåÌä∏ Ïñ∏ÎßàÏö¥Ìä∏ Ïãú Î¶¨Ïä§ÎÑà Ï†úÍ±∞
    return () => {
      subscription.remove();
    };
  }, []); // Ïù¥ useEffectÎäî Ïï± ÏãúÏûë Ïãú Ìïú Î≤àÎßå Ïã§ÌñâÎêòÎèÑÎ°ù Îπà Î∞∞Ïó¥ÏùÑ ÎÑ£Ïñ¥Ï§çÎãàÎã§.

  // üåü [Ï∂îÍ∞ÄÌï† Ìï®Ïàò]: Î™®Îì† ÏïåÎ¶ºÏùÑ ÏÇ≠Ï†úÌïòÎäî Î°úÏßÅ
  const dismissAppNotifications = async () => {
    try {
      // Ìï¥Îãπ Ïï±Í≥º Í¥ÄÎ†®Îêú Î™®Îì† ÏïåÎ¶ºÏùÑ ÏßÄÏõÅÎãàÎã§.
      await Notifications.dismissAllNotificationsAsync();
      console.log('‚úÖ Ïï± ÏßÑÏûÖ Ïãú Î™®Îì† Ìë∏Ïãú ÏïåÎ¶ºÏù¥ ÏßÄÏõåÏ°åÏäµÎãàÎã§.');
    } catch (e) {
      console.error('Ìë∏Ïãú ÏïåÎ¶º ÏÇ≠Ï†ú Ïã§Ìå®:', e);
    }
  };

  const [fontsLoaded, setFontsLoaded] = useState(false);

  useEffect(() => { //Ìè∞Ìä∏ Î≥∏Î™ÖÏ°∞
    async function loadFonts() {
      await Font.loadAsync({
        'Heavy': require('./assets/fonts/SourceHanSerifK-Heavy.otf'),
        'Bold': require('./assets/fonts/SourceHanSerifK-Bold.otf'),
        'SemiBold': require('./assets/fonts/SourceHanSerifK-SemiBold.otf'),
        'Medium': require('./assets/fonts/SourceHanSerifK-Medium.otf'),
        'Regular': require('./assets/fonts/SourceHanSerifK-Regular.otf'),
      });
      setFontsLoaded(true);
    }

    loadFonts();
  }, []);

  if (!fontsLoaded) return null;
  
  return (
    <ClerkProvider publishableKey={publishableKey} tokenCache={tokenCache}>
      <SafeAreaProvider>
        <StatusBar
          translucent
          backgroundColor="transparent"
          barStyle="dark-content"
        />
        <NavigationContainer>
          <SignedOut>
            <StackNavigator />
          </SignedOut>
          <SignedIn>
            <StackNavigator />
          </SignedIn>
        </NavigationContainer>
      </SafeAreaProvider>
    </ClerkProvider>
  );
}